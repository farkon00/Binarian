var PORT = 6969
var HEADER = "HTTP/1.0\ncontent-type: text/html; charset=utf-8 200 OK\n\n"

func build_server {
    var socket = (get_module "socket")
    var server = (execute_method socket "socket" [])

    execute_method server "bind" [(index (pyeval ["ret = ('127.0.0.1'," (to_str PORT) ")"] [] ["ret"]) 0)]
    execute_method server "listen" [10]
    execute_method server "setsockopt" [65535 4 1]

    print "Server is running"
    return server
}

var server = (build_server)
var ex = 0

while 1 {
    var client = (execute_method server "accept" [])
    var conn = (index (to_list client) 0)

    // conn.recv(1024).decode()
    var data = (execute_method (execute_method conn "recv" [1024]) "decode" [])
    var main_header = (split (index (split_limit data "\n" 1) 0) " ")
    var route = (index main_header 1)

    if (== route "/") {
        var resp = "Hello World"
    }
    elif (== route "/quit") {
        var ex = 1
        var resp = "Goodbye"
    }
    else {
        var resp = route
    }

    execute_method conn "send" [(execute_method (+ HEADER resp) "encode" [])]
    execute_method conn "close" []

    if ex {
        exit 0
    }
}

execute_method server "close" []